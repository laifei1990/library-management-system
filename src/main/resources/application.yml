#数据库
#spring:
#  datasource:
#    url: jdbc:mysql://localhost:3306/myadmin?useSSL=false&serverTimezone=GMT%2B8
#    username: root
#    password:
#    driverClassName: com.mysql.cj.jdbc.Driver
spring:
  datasource:
    url: jdbc:mysql://192.168.10.248:3306/awardcenter?characterEncoding=utf-8&useSSL=false
    username: iss_dev
    password: dev4iss
    driverClassName: com.mysql.cj.jdbc.Driver
#mybatis-plus
mybatis-plus:
  config-location: classpath:mybatis-config.xml
  mapper-locations: classpath:mapper/*.xml
#日志
logging:
  level.com.library.management.dao.mapper: debug
  #level.com.example.springbootdemo.demo.mapper: debug
#分页配置
pagehelper:
  helperDialect: mysql
  offsetAsPageNum: true
  rowBoundsWithCount: true
  pageSizeZero: true
  reasonable: true
#redis配置
redis:
  host: 127.0.0.1
  port: 6379
  password: null
  timeout: 30000
  # 连接池最大连接数（使用负值表示没有限制）
  maxTotal: 30
  # 最大空闲数
  maxIdle: 10
  # 连接池最大阻塞等待时间（使用负值表示没有限制）/ 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1
  maxWaitMillis: 1500
  # 做空闲连接检测时，每次的采样数 / 每次释放连接的最大数目
  numTestsPerEvictionRun: 1024
  # 空闲连接的检测周期，单位为毫秒 / 释放连接的扫描间隔（毫秒）
  timeBetweenEvictionRunsMillis: 30000
  # 连接的最小空闲时间，达到此值后空闲连接将被移除
  minEvictableIdleTimeMillis: 1800000
  # 连接空闲多久后释放, 当空闲时间>该值&&空闲连接>最大空闲连接数=>直接释放
  softMinEvictableIdleTimeMillis: 10000
  # 向连接池借用连接时是否做连接有效性检测(Ping)无效连接将会被删除 / 在获取连接的时候检查有效性, 默认false
  testOnBorrow: true
  # 向连接池借用连接时是否做空闲检测，空闲超时的将会被移除 / 在空闲时检查有效性, 默认false
  testWhileIdle: true
  # 当连接池资源耗尽时，调用者是否需要等待。和maxWaitMillis对应，当它为true时，maxWaitMillis生效 / 连接耗尽时是否阻塞, false报异常,true阻塞直到超时, 默认true
  blockWhenExhausted: false
#jetCache配置
#含义：https://github.com/alibaba/jetcache/wiki/Config_CN
jetcache:
  #统计间隔，0表示不统计
  statIntervalMinutes: 15
  #jetcache-anno把cacheName作为远程缓存key前缀，2.4.3以前的版本总是把areaName加在cacheName中，因此areaName也出现在key前缀中。
  #2.4.4以后可以配置，为了保持远程key兼容默认值为true，但是新项目的话false更合理些。
  areaInCacheName: false
  #@Cached和@CreateCache自动生成name的时候，为了不让name太长，hiddenPackages指定的包名前缀被截掉
  hidePackages: com.example.springbootdemo
  local:
    default:
      type: caffeine
      limit: 100
      keyConvertor: fastjson
      expireAfterWriteInMillis: 100000
    otherArea:
      type: linkedhashmap
      limit: 100
      keyConvertor: none
      expireAfterWriteInMillis: 100000
  remote:
    default:
      type: redis
      keyConvertor: fastjson
      valueEncoder: java
      valueDecoder: java
      poolConfig:
        minIdle: 5
        maxIdle: 20
        maxTotal: 50
      host: ${redis.host}
      port: ${redis.port}
    otherArea:
      type: redis
      keyConvertor: fastjson
      valueEncoder: kryo
      valueDecoder: kryo
      poolConfig:
        minIdle: 5
        maxIdle: 20
        maxTotal: 50
      host: ${redis.host}
      port: ${redis.port}
